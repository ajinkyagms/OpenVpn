# name: Terraform Sandbox Plan Only

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: "Environment to plan"
#         required: true
#         default: virginia
#         type: choice
#         options:
#           - virginia
#           - mumbai

# permissions:
#   id-token: write
#   contents: read

# jobs:
#   terraform-plan:
#     runs-on: ubuntu-latest
#     environment: sandbox

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.7.5

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: >-
#             ${{ 
#               github.event.inputs.environment == 'mumbai' && 'ap-south-1' || 'us-east-1'
#             }}

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Validate
#         run: terraform validate

#       - name: Terraform Plan
#         run: |
#           ENVIRONMENT=${{ github.event.inputs.environment }}
#           if [ -z "$ENVIRONMENT" ]; then
#             ENVIRONMENT="virginia"
#           fi
#           echo "Selected environment: $ENVIRONMENT"
#           terraform plan -var-file="terraform-$ENVIRONMENT.tfvars"


name: OpenVPN Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        default: virginia
        type: choice
        options:
          - virginia
          - mumbai

permissions:
  id-token: write
  contents: read

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    environment: sandbox

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: >-
            ${{ github.event.inputs.environment == 'mumbai' && 'ap-south-1' || 'us-east-1' }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }}
          echo "Selected environment: $ENVIRONMENT"
          terraform plan -var-file="terraform-$ENVIRONMENT.tfvar

      - name: Terraform Apply
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }}
          echo "Selected environment: $ENVIRONMENT"
          terraform apply -auto-approve -var-file="terraform-$ENVIRONMENT.tfvars"
      
      - name: Terraform Destroy
        run: |
          ENVIRONMENT=${{ github.event.inputs.environment }}
          echo "Selected environment: $ENVIRONMENT"
          terraform destroy -auto-approve -var-file="terraform-$ENVIRONMENT.tfvars"

